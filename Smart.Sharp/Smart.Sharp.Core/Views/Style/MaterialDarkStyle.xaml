<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- COLOUR AND BRUSHES -->

    <Color x:Key="Cyan700">#0097A7</Color>
    <Color x:Key="Grey600">#757575</Color>
    <Color x:Key="PinkA100">#FF80AB</Color>
    <Color x:Key="PinkA200">#FF4081</Color>
    <Color x:Key="PinkA400">#F50057</Color>
    <Color x:Key="AlternateTextColour">#303030</Color>
    <Color x:Key="FullWhite">#FFFFFF</Color>
    <Color x:Key="Gray">#939393</Color>
    <Color x:Key="DarkGray">#656565</Color>

    <SolidColorBrush x:Key="Primary1" Color="{StaticResource Cyan700}"/>
    <SolidColorBrush x:Key="Primary2" Color="{StaticResource Cyan700}"/>
    <SolidColorBrush x:Key="Primary3" Color="{StaticResource Grey600}"/>
    <SolidColorBrush x:Key="Accent1" Color="{StaticResource PinkA200}"/>
    <SolidColorBrush x:Key="Accent2" Color="{StaticResource PinkA400}"/>
    <SolidColorBrush x:Key="Accent3" Color="{StaticResource PinkA100}"/>
    <SolidColorBrush x:Key="Text" Color="White"/>
    <SolidColorBrush x:Key="AlternateText" Color="{StaticResource AlternateTextColour}"/>
    <SolidColorBrush x:Key="Canvas" Color="{StaticResource AlternateTextColour}"/>
    <SolidColorBrush x:Key="Border" Color="{StaticResource DarkGray}"/>
    <SolidColorBrush x:Key="Disabled" Color="{StaticResource DarkGray}"/>
    <SolidColorBrush x:Key="PickerHeader" Color="{StaticResource Gray}"/>
    <SolidColorBrush x:Key="ClockCircle" Color="{StaticResource Gray}"/>

    <!-- TEXT -->
    
    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Text}" />
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource Text}" />
        <Setter Property="Background" Value="{StaticResource Canvas}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Primary1}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- BUTTONS -->
    
    <Style x:Key="SecondaryFlatButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Accent1}"/>
        <Setter Property="Background" Value="{StaticResource Canvas}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Padding="10,5,10,5" BorderThickness="0" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PickerHeader}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryFlatButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Primary1}"/>
        <Setter Property="Background" Value="{StaticResource Canvas}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Padding="10,5,10,5" BorderThickness="0" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PickerHeader}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SecondaryRaisedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource AlternateText}"/>
        <Setter Property="Background" Value="{StaticResource Accent1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Padding="10,5,10,5" BorderThickness="0" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PickerHeader}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryRaisedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource AlternateText}"/>
        <Setter Property="Background" Value="{StaticResource Primary1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Padding="10,5,10,5" BorderThickness="0" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PickerHeader}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- LISTS -->

    <Style x:Key="ListItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{StaticResource Canvas}"/>
        <Setter Property="Foreground" Value="{StaticResource Text}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="True" Padding="5" BorderBrush="{StaticResource Primary1}" Background="{TemplateBinding Background}" BorderThickness="0,0,0,0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Border}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0,0,0,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource Canvas}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListItemStyle}"/>
    </Style>
    
    <!-- TABS -->
    
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource Canvas}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource Primary1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid >
                        <Border x:Name="Bd" Padding="10,5,10,5" BorderThickness="0,0,0,0" Background="{TemplateBinding Background}" BorderBrush="{StaticResource Accent1}">
                            <ContentPresenter ContentSource="Header" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0,0,0,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>